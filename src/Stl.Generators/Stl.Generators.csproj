<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;net7.0;netstandard2.0</TargetFrameworks>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <PackageTags>servicetitan stl stl_fusion</PackageTags>
    <Description>Stl.Generators - Stl.Fusion proxy type generator.</Description>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="Microsoft.CodeAnalysis" />
    <Using Include="Microsoft.CodeAnalysis.CSharp" />
    <Using Include="Microsoft.CodeAnalysis.CSharp.Syntax" />
    <Using Include="System.Text" />
    <Using Include="System.Collections.Immutable" />
    <Using Include="Stl.Generators.Internal" />
    <Using Include="Stl.Generators.Internal.DiagnosticsHelpers" Static="true" />
  </ItemGroup>

  <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
  <ItemGroup>
    <None Include="$(OutputPath)\netstandard2.0\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>

</Project>
