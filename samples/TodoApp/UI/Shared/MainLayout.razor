@inherits LayoutComponentBase
@implements IDisposable
@inject NavigationManager Navigator
@inject UICommandFailureList CommandFailureList

@{
    var failures = CommandFailureList.Items;
}

<Layout Sider="true">
    <LayoutSider>
        <LayoutSiderContent>
            <LeftBar />
        </LayoutSiderContent>
    </LayoutSider>
    <Layout>
        <LayoutHeader Fixed="true">
            <TopBar />
        </LayoutHeader>

        <LayoutContent Padding="Padding.Is4">
            @foreach (var failure in failures) {
                <WhenCommandError Exception="failure.Result?.Error"
                                  Dismissed="@(_ => CommandFailureList.Remove(failure.CommandId))" />
            }

            @Body
        </LayoutContent>
    </Layout>
</Layout>

@code {

    protected override void OnInitialized()
    {
        Navigator.LocationChanged += OnLocationChanged;
        CommandFailureList.Changed += OnCommandFailureListChanged;
    }

    public void Dispose()
    {
        Navigator.LocationChanged -= OnLocationChanged;
        CommandFailureList.Changed -= OnCommandFailureListChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
        => CommandFailureList.Clear();

    private void OnCommandFailureListChanged()
        => this.StateHasChangedAsync();
}
